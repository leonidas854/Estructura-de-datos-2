1. Productos

//solo colocar en el uml, los que dicen abajo de titulo_service.cs, los otros no
ProductoService.cs

AgregarProducto(Producto producto): Agrega un nuevo producto al sistema.
ActualizarProducto(Producto producto): Actualiza los detalles de un producto existente.
EliminarProducto(int idProducto): Elimina un producto por su ID.
ObtenerProductoPorID(int idProducto): Devuelve un producto específico por su ID.
ObtenerTodosLosProductos(): Devuelve una lista de todos los productos.
BuscarProductoPorNombre(string nombre): Busca productos por nombre.
ObtenerProductosPorProveedor(int idProveedor): Devuelve productos asociados a un proveedor específico.

ProductoRepositorio.cs

InsertarProducto(Producto producto): Inserta un producto en la base de datos.
ActualizarProducto(Producto producto): Actualiza los datos de un producto en la base de datos.
EliminarProducto(int idProducto): Elimina un producto de la base de datos.
ObtenerProductoPorID(int idProducto): Consulta y devuelve un producto por su ID.
ObtenerTodosLosProductos(): Consulta y devuelve todos los productos de la base de datos.


2. Categorías


CategoriaService.cs

AgregarCategoria(Categoria categoria): Agrega una nueva categoría.
ActualizarCategoria(Categoria categoria): Actualiza los detalles de una categoría.
EliminarCategoria(int idCategoria): Elimina una categoría por su ID.
ObtenerCategoriaPorID(int idCategoria): Devuelve una categoría específica por su ID.
ObtenerTodasLasCategorias(): Devuelve todas las categorías.

CategoriaRepositorio.cs

InsertarCategoria(Categoria categoria): Inserta una nueva categoría en la base de datos.
ActualizarCategoria(Categoria categoria): Actualiza los datos de una categoría en la base de datos.
EliminarCategoria(int idCategoria): Elimina una categoría de la base de datos.
ObtenerCategoriaPorID(int idCategoria): Consulta y devuelve una categoría por su ID.
ObtenerTodasLasCategorias(): Consulta y devuelve todas las categorías.


3. Producto_Categoria


ProductoCategoriaService.cs

AgregarRelacionProductoCategoria(int idProducto, int idCategoria): Crea una nueva relación entre un producto y una categoría.
EliminarRelacionProductoCategoria(int idProducto, int idCategoria): Elimina una relación entre un producto y una categoría.
ObtenerCategoriasPorProducto(int idProducto): Devuelve todas las categorías asociadas a un producto.
ObtenerProductosPorCategoria(int idCategoria): Devuelve todos los productos asociados a una categoría.

ProductoCategoriaRepositorio.cs

InsertarRelacionProductoCategoria(int idProducto, int idCategoria): Inserta una nueva relación en la base de datos.
EliminarRelacionProductoCategoria(int idProducto, int idCategoria): Elimina una relación de la base de datos.
ObtenerCategoriasPorProducto(int idProducto): Consulta y devuelve categorías asociadas a un producto.
ObtenerProductosPorCategoria(int idCategoria): Consulta y devuelve productos asociados a una categoría.


4. Locales


LocalService.cs
AgregarLocal(Local local): Agrega un nuevo local.
ActualizarLocal(Local local): Actualiza los detalles de un local.
EliminarLocal(int idLocal): Elimina un local por su ID.
ObtenerLocalPorID(int idLocal): Devuelve un local específico por su ID.
ObtenerTodosLosLocales(): Devuelve todos los locales.

LocalRepositorio.cs

InsertarLocal(Local local): Inserta un nuevo local en la base de datos.
ActualizarLocal(Local local): Actualiza los datos de un local en la base de datos.
EliminarLocal(int idLocal): Elimina un local de la base de datos.
ObtenerLocalPorID(int idLocal): Consulta y devuelve un local por su ID.
ObtenerTodosLosLocales(): Consulta y devuelve todos los locales.


5. Inventario_Local


InventarioLocalService.cs

RegistrarProductoEnLocal(int idProducto, int idLocal, int cantidad): Registra un producto en un local específico.
ActualizarCantidadEnLocal(int idInventario, int cantidad): Actualiza la cantidad de un producto en un local.
ObtenerInventarioPorLocal(int idLocal): Devuelve el inventario de un local.
ObtenerCantidadPorProductoEnLocal(int idProducto, int idLocal): Devuelve la cantidad de un producto específico en un local.

InventarioLocalRepositorio.cs

InsertarRegistroInventario(InventarioLocal inventario): Inserta un registro de inventario en la base de datos.
ActualizarCantidadEnLocal(int idInventario, int cantidad): Actualiza la cantidad de un producto en un local.
ObtenerInventarioPorLocal(int idLocal): Consulta y devuelve el inventario de un local.
ObtenerCantidadPorProductoEnLocal(int idProducto, int idLocal): Consulta y devuelve la cantidad de un producto en un local.


6. Proveedores


ProveedorService.cs

AgregarProveedor(Proveedor proveedor): Agrega un nuevo proveedor.
ActualizarProveedor(Proveedor proveedor): Actualiza los detalles de un proveedor.
EliminarProveedor(int idProveedor): Elimina un proveedor por su ID.
ObtenerProveedorPorID(int idProveedor): Devuelve un proveedor específico por su ID.
ObtenerTodosLosProveedores(): Devuelve todos los proveedores.

ProveedorRepositorio.cs

InsertarProveedor(Proveedor proveedor): Inserta un proveedor en la base de datos.
ActualizarProveedor(Proveedor proveedor): Actualiza los datos de un proveedor en la base de datos.
EliminarProveedor(int idProveedor): Elimina un proveedor de la base de datos.
ObtenerProveedorPorID(int idProveedor): Consulta y devuelve un proveedor por su ID.
ObtenerTodosLosProveedores(): Consulta y devuelve todos los proveedores.


7. Movimientos_Inventario


MovimientoInventarioService.cs
RegistrarMovimiento(MovimientoInventario movimiento): Registra un movimiento de inventario (entrada/salida).
ObtenerMovimientoPorID(int idMovimiento): Devuelve un movimiento específico por su ID.
ObtenerMovimientosPorProducto(int idProducto): Devuelve los movimientos relacionados con un producto.
ObtenerMovimientosPorLocal(int idLocal): Devuelve los movimientos relacionados con un local.

MovimientoInventarioRepositorio.cs

InsertarMovimiento(MovimientoInventario movimiento): Inserta un movimiento de inventario en la base de datos.
ObtenerMovimientoPorID(int idMovimiento): Consulta y devuelve un movimiento por su ID.
ObtenerMovimientosPorProducto(int idProducto): Consulta y devuelve los movimientos por producto.
ObtenerMovimientosPorLocal(int idLocal): Consulta y devuelve los movimientos por local.


8. Usuarios


UsuarioService.cs

AgregarUsuario(Usuario usuario): Agrega un nuevo usuario.
ActualizarUsuario(Usuario usuario): Actualiza los detalles de un usuario.
EliminarUsuario(int idUsuario): Elimina un usuario por su ID.
ObtenerUsuarioPorID(int idUsuario): Devuelve un usuario específico por su ID.
ObtenerTodosLosUsuarios(): Devuelve todos los usuarios.
AutenticarUsuario(string nombreUsuario, string contraseña): Verifica las credenciales de un usuario.

UsuarioRepositorio.cs

InsertarUsuario(Usuario usuario): Inserta un usuario en la base de datos.
ActualizarUsuario(Usuario usuario): Actualiza los datos de un usuario en la base de datos.
EliminarUsuario(int idUsuario): Elimina un usuario de la base de datos.
ObtenerUsuarioPorID(int idUsuario): Consulta y devuelve un usuario por su ID.
ObtenerTodosLosUsuarios(): Consulta y devuelve todos los usuarios.


9. Roles


RolService.cs

AgregarRol(Rol rol): Agrega un nuevo rol.
ActualizarRol(Rol rol): Actualiza los detalles de un rol.
EliminarRol(int idRol): Elimina un rol por su ID.
ObtenerRolPorID(int idRol): Devuelve un rol específico por su ID.
ObtenerTodosLosRoles(): Devuelve todos los roles.

RolRepositorio.cs

InsertarRol(Rol rol): Inserta un rol en la base de datos.
ActualizarRol(Rol rol): Actualiza los datos de un rol en la base de datos.
EliminarRol(int idRol): Elimina un rol de la base de datos.
ObtenerRolPorID(int idRol): Consulta y devuelve un rol por su ID.
ObtenerTodosLosRoles(): Consulta y devuelve todos los roles.


10. Controladores


ControladorService.cs
AgregarControlador(Controlador controlador): Agrega un nuevo controlador.
ActualizarControlador(Controlador controlador): Actualiza los detalles de un controlador.
EliminarControlador(int idControlador): Elimina un controlador por su ID.
ObtenerControladorPorID(int idControlador): Devuelve un controlador específico por su ID.
ObtenerTodosLosControladores(): Devuelve todos los controladores.

ControladorRepositorio.cs

InsertarControlador(Controlador controlador): Inserta un controlador en la base de datos.
ActualizarControlador(Controlador controlador): Actualiza los datos de un controlador en la base de datos.
EliminarControlador(int idControlador): Elimina un controlador de la base de datos.
ObtenerControladorPorID(int idControlador): Consulta y devuelve un controlador por su ID.
ObtenerTodosLosControladores(): Consulta y devuelve todos los controladores.


11. Permisos_Rol


PermisoRolService.cs
AsignarPermiso(int idRol, int idControlador, string permiso): Asigna un permiso a un rol para un controlador específico.
EliminarPermiso(int idRol, int idControlador): Elimina un permiso de un rol.
ObtenerPermisosPorRol(int idRol): Devuelve los permisos asignados a un rol.
ObtenerPermisosPorControlador(int idControlador): Devuelve los roles que tienen acceso a un controlador.

PermisoRolRepositorio.cs

InsertarPermiso(int idRol, int idControlador, string permiso): Inserta un permiso en la base de datos.
EliminarPermiso(int idRol, int idControlador): Elimina un permiso de la base de datos.
ObtenerPermisosPorRol(int idRol): Consulta y devuelve los permisos por rol.
ObtenerPermisosPorControlador(int idControlador): Consulta y devuelve los permisos por controlador.