BTree (Árbol B)

Insertar(T elemento): Inserta un nuevo elemento en el árbol, manteniendo la estructura balanceada.
Eliminar(T elemento): Elimina un elemento específico del árbol y reorganiza los nodos si es necesario para mantener la propiedad de balance del árbol.
Buscar(Func<T, bool> criterio): Busca y devuelve un elemento en el árbol que cumpla con un criterio específico.
BusquedaPorAmplitud(): Utiliza una cola para recorrer el árbol nivel por nivel (BFS), devolviendo los elementos en el orden en que se visitan.
BusquedaPorProfundidad(): Utiliza una pila para recorrer el árbol rama por rama (DFS), devolviendo los elementos en el orden en que se visitan.
RecorrerEnOrdenAscendente(): Devuelve una lista de los elementos del árbol en orden ascendente.
RecorrerEnOrdenDescendente(): Devuelve una lista de los elementos del árbol en orden descendente.
Altura(): Devuelve la altura del árbol B.
DividirNodo(NodoB<T> nodo): Divide un nodo que está lleno para mantener la propiedad de grado del árbol.
FusionarNodos(NodoB<T> nodo1, NodoB<T> nodo2): Fusiona nodos cuando un nodo tiene menos elementos de los permitidos tras una eliminación.
RotacionIzquierda(Nodo<T> nodo) y RotacionDerecha(Nodo<T> nodo): Métodos para realizar rotaciones y rebalancear el árbol si es necesario.

2. Pila (Stack)

Push(T elemento): Agrega un elemento a la parte superior de la pila.
Pop(): Elimina y devuelve el elemento en la parte superior de la pila.
Peek(): Devuelve el elemento en la parte superior de la pila sin eliminarlo.
EstaVacia(): Devuelve true si la pila está vacía, y false en caso contrario.
Tamano(): Devuelve el número de elementos en la pila.
RevertirPila(): Reorganiza los elementos de la pila en orden inverso.
BuscarElemento(T elemento): Verifica si un elemento específico está en la pila.
Usada para DFS: Integrada con el B-tree para realizar búsquedas en profundidad.

3. Cola (Queue)

Enqueue(T elemento): Agrega un elemento al final de la cola.
Dequeue(): Elimina y devuelve el elemento al frente de la cola.
Peek(): Devuelve el elemento al frente de la cola sin eliminarlo.
EstaVacia(): Devuelve true si la cola está vacía, y false en caso contrario.
Tamano(): Devuelve el número de elementos en la cola.
FusionarColas(Cola<T> otraCola): Combina dos colas en una sola manteniendo el orden FIFO.
BuscarElemento(T elemento): Verifica si un elemento específico está en la cola.
Usada para BFS: Integrada con el B-tree para realizar búsquedas en amplitud.

4. Lista (List)

Agregar(T elemento): Agrega un elemento al final de la lista.
Eliminar(T elemento): Elimina un elemento de la lista si se encuentra.
Buscar(Func<T, bool> criterio): Busca un elemento en la lista basado en un criterio específico y lo devuelve.
Ordenar(): Ordena los elementos de la lista en orden ascendente o descendente.
Contiene(T elemento): Devuelve true si la lista contiene el elemento, y false en caso contrario.
InsertarEnPosicion(int indice, T elemento): Inserta un elemento en una posición específica de la lista.
ObtenerEnPosicion(int indice): Devuelve el elemento en una posición específica de la lista.
RecorrerLista(): Devuelve todos los elementos de la lista en el orden en que están almacenados.
Tamano(): Devuelve el número de elementos en la lista.
RevertirLista(): Invierte el orden de los elementos en la lista.
EliminarDuplicados(): Elimina elementos duplicados de la lista para mantener solo elementos únicos.